// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onnx.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "onnx.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace onnx {

namespace {

const ::google::protobuf::Descriptor* AttributeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttributeProto_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* AttributeProto_AttributeType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ValueInfoProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ValueInfoProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ModelProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ModelProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* StringStringEntryProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StringStringEntryProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TensorAnnotation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TensorAnnotation_reflection_ = NULL;
const ::google::protobuf::Descriptor* GraphProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GraphProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TensorProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TensorProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TensorProto_Segment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TensorProto_Segment_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TensorProto_DataType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TensorProto_DataLocation_descriptor_ = NULL;
const ::google::protobuf::Descriptor* TensorShapeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TensorShapeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TensorShapeProto_Dimension_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TensorShapeProto_Dimension_reflection_ = NULL;
struct TensorShapeProto_DimensionOneofInstance {
  ::google::protobuf::int64 dim_value_;
  const ::std::string* dim_param_;
}* TensorShapeProto_Dimension_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* TypeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TypeProto_reflection_ = NULL;
struct TypeProtoOneofInstance {
  const ::onnx::TypeProto_Tensor* tensor_type_;
}* TypeProto_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* TypeProto_Tensor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TypeProto_Tensor_reflection_ = NULL;
const ::google::protobuf::Descriptor* OperatorSetIdProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OperatorSetIdProto_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Version_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_onnx_2eproto() {
  protobuf_AddDesc_onnx_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "onnx.proto");
  GOOGLE_CHECK(file != NULL);
  AttributeProto_descriptor_ = file->message_type(0);
  static const int AttributeProto_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, ref_attr_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, doc_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, f_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, i_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, s_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, t_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, g_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, floats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, ints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, strings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, tensors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, graphs_),
  };
  AttributeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AttributeProto_descriptor_,
      AttributeProto::default_instance_,
      AttributeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AttributeProto));
  AttributeProto_AttributeType_descriptor_ = AttributeProto_descriptor_->enum_type(0);
  ValueInfoProto_descriptor_ = file->message_type(1);
  static const int ValueInfoProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueInfoProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueInfoProto, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueInfoProto, doc_string_),
  };
  ValueInfoProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ValueInfoProto_descriptor_,
      ValueInfoProto::default_instance_,
      ValueInfoProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueInfoProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueInfoProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ValueInfoProto));
  NodeProto_descriptor_ = file->message_type(2);
  static const int NodeProto_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, op_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, domain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, doc_string_),
  };
  NodeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NodeProto_descriptor_,
      NodeProto::default_instance_,
      NodeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NodeProto));
  ModelProto_descriptor_ = file->message_type(3);
  static const int ModelProto_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, ir_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, opset_import_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, producer_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, producer_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, domain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, model_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, doc_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, graph_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, metadata_props_),
  };
  ModelProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ModelProto_descriptor_,
      ModelProto::default_instance_,
      ModelProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ModelProto));
  StringStringEntryProto_descriptor_ = file->message_type(4);
  static const int StringStringEntryProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringStringEntryProto, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringStringEntryProto, value_),
  };
  StringStringEntryProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StringStringEntryProto_descriptor_,
      StringStringEntryProto::default_instance_,
      StringStringEntryProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringStringEntryProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringStringEntryProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StringStringEntryProto));
  TensorAnnotation_descriptor_ = file->message_type(5);
  static const int TensorAnnotation_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorAnnotation, tensor_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorAnnotation, quant_parameter_tensor_names_),
  };
  TensorAnnotation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TensorAnnotation_descriptor_,
      TensorAnnotation::default_instance_,
      TensorAnnotation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorAnnotation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorAnnotation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TensorAnnotation));
  GraphProto_descriptor_ = file->message_type(6);
  static const int GraphProto_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, node_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, initializer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, doc_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, value_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, quantization_annotation_),
  };
  GraphProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GraphProto_descriptor_,
      GraphProto::default_instance_,
      GraphProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GraphProto));
  TensorProto_descriptor_ = file->message_type(7);
  static const int TensorProto_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, dims_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, data_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, segment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, float_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, int32_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, string_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, int64_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, doc_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, raw_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, external_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, data_location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, double_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, uint64_data_),
  };
  TensorProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TensorProto_descriptor_,
      TensorProto::default_instance_,
      TensorProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TensorProto));
  TensorProto_Segment_descriptor_ = TensorProto_descriptor_->nested_type(0);
  static const int TensorProto_Segment_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto_Segment, begin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto_Segment, end_),
  };
  TensorProto_Segment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TensorProto_Segment_descriptor_,
      TensorProto_Segment::default_instance_,
      TensorProto_Segment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto_Segment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto_Segment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TensorProto_Segment));
  TensorProto_DataType_descriptor_ = TensorProto_descriptor_->enum_type(0);
  TensorProto_DataLocation_descriptor_ = TensorProto_descriptor_->enum_type(1);
  TensorShapeProto_descriptor_ = file->message_type(8);
  static const int TensorShapeProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShapeProto, dim_),
  };
  TensorShapeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TensorShapeProto_descriptor_,
      TensorShapeProto::default_instance_,
      TensorShapeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShapeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShapeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TensorShapeProto));
  TensorShapeProto_Dimension_descriptor_ = TensorShapeProto_descriptor_->nested_type(0);
  static const int TensorShapeProto_Dimension_offsets_[4] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TensorShapeProto_Dimension_default_oneof_instance_, dim_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TensorShapeProto_Dimension_default_oneof_instance_, dim_param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShapeProto_Dimension, denotation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShapeProto_Dimension, value_),
  };
  TensorShapeProto_Dimension_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TensorShapeProto_Dimension_descriptor_,
      TensorShapeProto_Dimension::default_instance_,
      TensorShapeProto_Dimension_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShapeProto_Dimension, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShapeProto_Dimension, _unknown_fields_),
      -1,
      TensorShapeProto_Dimension_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShapeProto_Dimension, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TensorShapeProto_Dimension));
  TypeProto_descriptor_ = file->message_type(9);
  static const int TypeProto_offsets_[3] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TypeProto_default_oneof_instance_, tensor_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto, denotation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto, value_),
  };
  TypeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TypeProto_descriptor_,
      TypeProto::default_instance_,
      TypeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto, _unknown_fields_),
      -1,
      TypeProto_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TypeProto));
  TypeProto_Tensor_descriptor_ = TypeProto_descriptor_->nested_type(0);
  static const int TypeProto_Tensor_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_Tensor, elem_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_Tensor, shape_),
  };
  TypeProto_Tensor_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TypeProto_Tensor_descriptor_,
      TypeProto_Tensor::default_instance_,
      TypeProto_Tensor_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_Tensor, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_Tensor, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TypeProto_Tensor));
  OperatorSetIdProto_descriptor_ = file->message_type(10);
  static const int OperatorSetIdProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetIdProto, domain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetIdProto, version_),
  };
  OperatorSetIdProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OperatorSetIdProto_descriptor_,
      OperatorSetIdProto::default_instance_,
      OperatorSetIdProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetIdProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetIdProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OperatorSetIdProto));
  Version_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_onnx_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AttributeProto_descriptor_, &AttributeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ValueInfoProto_descriptor_, &ValueInfoProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NodeProto_descriptor_, &NodeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ModelProto_descriptor_, &ModelProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StringStringEntryProto_descriptor_, &StringStringEntryProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TensorAnnotation_descriptor_, &TensorAnnotation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GraphProto_descriptor_, &GraphProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TensorProto_descriptor_, &TensorProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TensorProto_Segment_descriptor_, &TensorProto_Segment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TensorShapeProto_descriptor_, &TensorShapeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TensorShapeProto_Dimension_descriptor_, &TensorShapeProto_Dimension::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TypeProto_descriptor_, &TypeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TypeProto_Tensor_descriptor_, &TypeProto_Tensor::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OperatorSetIdProto_descriptor_, &OperatorSetIdProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_onnx_2eproto() {
  delete AttributeProto::default_instance_;
  delete AttributeProto_reflection_;
  delete ValueInfoProto::default_instance_;
  delete ValueInfoProto_reflection_;
  delete NodeProto::default_instance_;
  delete NodeProto_reflection_;
  delete ModelProto::default_instance_;
  delete ModelProto_reflection_;
  delete StringStringEntryProto::default_instance_;
  delete StringStringEntryProto_reflection_;
  delete TensorAnnotation::default_instance_;
  delete TensorAnnotation_reflection_;
  delete GraphProto::default_instance_;
  delete GraphProto_reflection_;
  delete TensorProto::default_instance_;
  delete TensorProto_reflection_;
  delete TensorProto_Segment::default_instance_;
  delete TensorProto_Segment_reflection_;
  delete TensorShapeProto::default_instance_;
  delete TensorShapeProto_reflection_;
  delete TensorShapeProto_Dimension::default_instance_;
  delete TensorShapeProto_Dimension_default_oneof_instance_;
  delete TensorShapeProto_Dimension_reflection_;
  delete TypeProto::default_instance_;
  delete TypeProto_default_oneof_instance_;
  delete TypeProto_reflection_;
  delete TypeProto_Tensor::default_instance_;
  delete TypeProto_Tensor_reflection_;
  delete OperatorSetIdProto::default_instance_;
  delete OperatorSetIdProto_reflection_;
}

void protobuf_AddDesc_onnx_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nonnx.proto\022\004onnx\"\340\003\n\016AttributeProto\022\014\n"
    "\004name\030\001 \001(\t\022\025\n\rref_attr_name\030\025 \001(\t\022\022\n\ndo"
    "c_string\030\r \001(\t\0220\n\004type\030\024 \001(\0162\".onnx.Attr"
    "ibuteProto.AttributeType\022\t\n\001f\030\002 \001(\002\022\t\n\001i"
    "\030\003 \001(\003\022\t\n\001s\030\004 \001(\014\022\034\n\001t\030\005 \001(\0132\021.onnx.Tens"
    "orProto\022\033\n\001g\030\006 \001(\0132\020.onnx.GraphProto\022\016\n\006"
    "floats\030\007 \003(\002\022\014\n\004ints\030\010 \003(\003\022\017\n\007strings\030\t "
    "\003(\014\022\"\n\007tensors\030\n \003(\0132\021.onnx.TensorProto\022"
    " \n\006graphs\030\013 \003(\0132\020.onnx.GraphProto\"\221\001\n\rAt"
    "tributeType\022\r\n\tUNDEFINED\020\000\022\t\n\005FLOAT\020\001\022\007\n"
    "\003INT\020\002\022\n\n\006STRING\020\003\022\n\n\006TENSOR\020\004\022\t\n\005GRAPH\020"
    "\005\022\n\n\006FLOATS\020\006\022\010\n\004INTS\020\007\022\013\n\007STRINGS\020\010\022\013\n\007"
    "TENSORS\020\t\022\n\n\006GRAPHS\020\n\"Q\n\016ValueInfoProto\022"
    "\014\n\004name\030\001 \001(\t\022\035\n\004type\030\002 \001(\0132\017.onnx.TypeP"
    "roto\022\022\n\ndoc_string\030\003 \001(\t\"\226\001\n\tNodeProto\022\r"
    "\n\005input\030\001 \003(\t\022\016\n\006output\030\002 \003(\t\022\014\n\004name\030\003 "
    "\001(\t\022\017\n\007op_type\030\004 \001(\t\022\016\n\006domain\030\007 \001(\t\022\'\n\t"
    "attribute\030\005 \003(\0132\024.onnx.AttributeProto\022\022\n"
    "\ndoc_string\030\006 \001(\t\"\223\002\n\nModelProto\022\022\n\nir_v"
    "ersion\030\001 \001(\003\022.\n\014opset_import\030\010 \003(\0132\030.onn"
    "x.OperatorSetIdProto\022\025\n\rproducer_name\030\002 "
    "\001(\t\022\030\n\020producer_version\030\003 \001(\t\022\016\n\006domain\030"
    "\004 \001(\t\022\025\n\rmodel_version\030\005 \001(\003\022\022\n\ndoc_stri"
    "ng\030\006 \001(\t\022\037\n\005graph\030\007 \001(\0132\020.onnx.GraphProt"
    "o\0224\n\016metadata_props\030\016 \003(\0132\034.onnx.StringS"
    "tringEntryProto\"4\n\026StringStringEntryProt"
    "o\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"k\n\020TensorA"
    "nnotation\022\023\n\013tensor_name\030\001 \001(\t\022B\n\034quant_"
    "parameter_tensor_names\030\002 \003(\0132\034.onnx.Stri"
    "ngStringEntryProto\"\243\002\n\nGraphProto\022\035\n\004nod"
    "e\030\001 \003(\0132\017.onnx.NodeProto\022\014\n\004name\030\002 \001(\t\022&"
    "\n\013initializer\030\005 \003(\0132\021.onnx.TensorProto\022\022"
    "\n\ndoc_string\030\n \001(\t\022#\n\005input\030\013 \003(\0132\024.onnx"
    ".ValueInfoProto\022$\n\006output\030\014 \003(\0132\024.onnx.V"
    "alueInfoProto\022(\n\nvalue_info\030\r \003(\0132\024.onnx"
    ".ValueInfoProto\0227\n\027quantization_annotati"
    "on\030\016 \003(\0132\026.onnx.TensorAnnotation\"\270\005\n\013Ten"
    "sorProto\022\014\n\004dims\030\001 \003(\003\022\021\n\tdata_type\030\002 \001("
    "\005\022*\n\007segment\030\003 \001(\0132\031.onnx.TensorProto.Se"
    "gment\022\026\n\nfloat_data\030\004 \003(\002B\002\020\001\022\026\n\nint32_d"
    "ata\030\005 \003(\005B\002\020\001\022\023\n\013string_data\030\006 \003(\014\022\026\n\nin"
    "t64_data\030\007 \003(\003B\002\020\001\022\014\n\004name\030\010 \001(\t\022\022\n\ndoc_"
    "string\030\014 \001(\t\022\020\n\010raw_data\030\t \001(\014\0223\n\rextern"
    "al_data\030\r \003(\0132\034.onnx.StringStringEntryPr"
    "oto\0225\n\rdata_location\030\016 \001(\0162\036.onnx.Tensor"
    "Proto.DataLocation\022\027\n\013double_data\030\n \003(\001B"
    "\002\020\001\022\027\n\013uint64_data\030\013 \003(\004B\002\020\001\032%\n\007Segment\022"
    "\r\n\005begin\030\001 \001(\003\022\013\n\003end\030\002 \001(\003\"\332\001\n\010DataType"
    "\022\r\n\tUNDEFINED\020\000\022\t\n\005FLOAT\020\001\022\t\n\005UINT8\020\002\022\010\n"
    "\004INT8\020\003\022\n\n\006UINT16\020\004\022\t\n\005INT16\020\005\022\t\n\005INT32\020"
    "\006\022\t\n\005INT64\020\007\022\n\n\006STRING\020\010\022\010\n\004BOOL\020\t\022\013\n\007FL"
    "OAT16\020\n\022\n\n\006DOUBLE\020\013\022\n\n\006UINT32\020\014\022\n\n\006UINT6"
    "4\020\r\022\r\n\tCOMPLEX64\020\016\022\016\n\nCOMPLEX128\020\017\022\014\n\010BF"
    "LOAT16\020\020\")\n\014DataLocation\022\013\n\007DEFAULT\020\000\022\014\n"
    "\010EXTERNAL\020\001\"\225\001\n\020TensorShapeProto\022-\n\003dim\030"
    "\001 \003(\0132 .onnx.TensorShapeProto.Dimension\032"
    "R\n\tDimension\022\023\n\tdim_value\030\001 \001(\003H\000\022\023\n\tdim"
    "_param\030\002 \001(\tH\000\022\022\n\ndenotation\030\003 \001(\tB\007\n\005va"
    "lue\"\233\001\n\tTypeProto\022-\n\013tensor_type\030\001 \001(\0132\026"
    ".onnx.TypeProto.TensorH\000\022\022\n\ndenotation\030\006"
    " \001(\t\032B\n\006Tensor\022\021\n\telem_type\030\001 \001(\005\022%\n\005sha"
    "pe\030\002 \001(\0132\026.onnx.TensorShapeProtoB\007\n\005valu"
    "e\"5\n\022OperatorSetIdProto\022\016\n\006domain\030\001 \001(\t\022"
    "\017\n\007version\030\002 \001(\003*\227\001\n\007Version\022\022\n\016_START_V"
    "ERSION\020\000\022\031\n\025IR_VERSION_2017_10_10\020\001\022\031\n\025I"
    "R_VERSION_2017_10_30\020\002\022\030\n\024IR_VERSION_201"
    "7_11_3\020\003\022\030\n\024IR_VERSION_2019_1_22\020\004\022\016\n\nIR"
    "_VERSION\020\005", 2690);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "onnx.proto", &protobuf_RegisterTypes);
  AttributeProto::default_instance_ = new AttributeProto();
  ValueInfoProto::default_instance_ = new ValueInfoProto();
  NodeProto::default_instance_ = new NodeProto();
  ModelProto::default_instance_ = new ModelProto();
  StringStringEntryProto::default_instance_ = new StringStringEntryProto();
  TensorAnnotation::default_instance_ = new TensorAnnotation();
  GraphProto::default_instance_ = new GraphProto();
  TensorProto::default_instance_ = new TensorProto();
  TensorProto_Segment::default_instance_ = new TensorProto_Segment();
  TensorShapeProto::default_instance_ = new TensorShapeProto();
  TensorShapeProto_Dimension::default_instance_ = new TensorShapeProto_Dimension();
  TensorShapeProto_Dimension_default_oneof_instance_ = new TensorShapeProto_DimensionOneofInstance;
  TypeProto::default_instance_ = new TypeProto();
  TypeProto_default_oneof_instance_ = new TypeProtoOneofInstance;
  TypeProto_Tensor::default_instance_ = new TypeProto_Tensor();
  OperatorSetIdProto::default_instance_ = new OperatorSetIdProto();
  AttributeProto::default_instance_->InitAsDefaultInstance();
  ValueInfoProto::default_instance_->InitAsDefaultInstance();
  NodeProto::default_instance_->InitAsDefaultInstance();
  ModelProto::default_instance_->InitAsDefaultInstance();
  StringStringEntryProto::default_instance_->InitAsDefaultInstance();
  TensorAnnotation::default_instance_->InitAsDefaultInstance();
  GraphProto::default_instance_->InitAsDefaultInstance();
  TensorProto::default_instance_->InitAsDefaultInstance();
  TensorProto_Segment::default_instance_->InitAsDefaultInstance();
  TensorShapeProto::default_instance_->InitAsDefaultInstance();
  TensorShapeProto_Dimension::default_instance_->InitAsDefaultInstance();
  TypeProto::default_instance_->InitAsDefaultInstance();
  TypeProto_Tensor::default_instance_->InitAsDefaultInstance();
  OperatorSetIdProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_onnx_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_onnx_2eproto {
  StaticDescriptorInitializer_onnx_2eproto() {
    protobuf_AddDesc_onnx_2eproto();
  }
} static_descriptor_initializer_onnx_2eproto_;
const ::google::protobuf::EnumDescriptor* Version_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Version_descriptor_;
}
bool Version_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* AttributeProto_AttributeType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttributeProto_AttributeType_descriptor_;
}
bool AttributeProto_AttributeType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const AttributeProto_AttributeType AttributeProto::UNDEFINED;
const AttributeProto_AttributeType AttributeProto::FLOAT;
const AttributeProto_AttributeType AttributeProto::INT;
const AttributeProto_AttributeType AttributeProto::STRING;
const AttributeProto_AttributeType AttributeProto::TENSOR;
const AttributeProto_AttributeType AttributeProto::GRAPH;
const AttributeProto_AttributeType AttributeProto::FLOATS;
const AttributeProto_AttributeType AttributeProto::INTS;
const AttributeProto_AttributeType AttributeProto::STRINGS;
const AttributeProto_AttributeType AttributeProto::TENSORS;
const AttributeProto_AttributeType AttributeProto::GRAPHS;
const AttributeProto_AttributeType AttributeProto::AttributeType_MIN;
const AttributeProto_AttributeType AttributeProto::AttributeType_MAX;
const int AttributeProto::AttributeType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int AttributeProto::kNameFieldNumber;
const int AttributeProto::kRefAttrNameFieldNumber;
const int AttributeProto::kDocStringFieldNumber;
const int AttributeProto::kTypeFieldNumber;
const int AttributeProto::kFFieldNumber;
const int AttributeProto::kIFieldNumber;
const int AttributeProto::kSFieldNumber;
const int AttributeProto::kTFieldNumber;
const int AttributeProto::kGFieldNumber;
const int AttributeProto::kFloatsFieldNumber;
const int AttributeProto::kIntsFieldNumber;
const int AttributeProto::kStringsFieldNumber;
const int AttributeProto::kTensorsFieldNumber;
const int AttributeProto::kGraphsFieldNumber;
#endif  // !_MSC_VER

AttributeProto::AttributeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.AttributeProto)
}

void AttributeProto::InitAsDefaultInstance() {
  t_ = const_cast< ::onnx::TensorProto*>(&::onnx::TensorProto::default_instance());
  g_ = const_cast< ::onnx::GraphProto*>(&::onnx::GraphProto::default_instance());
}

AttributeProto::AttributeProto(const AttributeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onnx.AttributeProto)
}

void AttributeProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ref_attr_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  f_ = 0;
  i_ = GOOGLE_LONGLONG(0);
  s_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  t_ = NULL;
  g_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AttributeProto::~AttributeProto() {
  // @@protoc_insertion_point(destructor:onnx.AttributeProto)
  SharedDtor();
}

void AttributeProto::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (ref_attr_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ref_attr_name_;
  }
  if (doc_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete doc_string_;
  }
  if (s_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete s_;
  }
  if (this != default_instance_) {
    delete t_;
    delete g_;
  }
}

void AttributeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttributeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttributeProto_descriptor_;
}

const AttributeProto& AttributeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_onnx_2eproto();
  return *default_instance_;
}

AttributeProto* AttributeProto::default_instance_ = NULL;

AttributeProto* AttributeProto::New() const {
  return new AttributeProto;
}

void AttributeProto::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<AttributeProto*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(type_, i_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_ref_attr_name()) {
      if (ref_attr_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ref_attr_name_->clear();
      }
    }
    if (has_doc_string()) {
      if (doc_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        doc_string_->clear();
      }
    }
    if (has_s()) {
      if (s_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        s_->clear();
      }
    }
    if (has_t()) {
      if (t_ != NULL) t_->::onnx::TensorProto::Clear();
    }
  }
  if (has_g()) {
    if (g_ != NULL) g_->::onnx::GraphProto::Clear();
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  floats_.Clear();
  ints_.Clear();
  strings_.Clear();
  tensors_.Clear();
  graphs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AttributeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.AttributeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_f;
        break;
      }

      // optional float f = 2;
      case 2: {
        if (tag == 21) {
         parse_f:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &f_)));
          set_has_f();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_i;
        break;
      }

      // optional int64 i = 3;
      case 3: {
        if (tag == 24) {
         parse_i:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &i_)));
          set_has_i();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_s;
        break;
      }

      // optional bytes s = 4;
      case 4: {
        if (tag == 34) {
         parse_s:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_s()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_t;
        break;
      }

      // optional .onnx.TensorProto t = 5;
      case 5: {
        if (tag == 42) {
         parse_t:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_t()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_g;
        break;
      }

      // optional .onnx.GraphProto g = 6;
      case 6: {
        if (tag == 50) {
         parse_g:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_g()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_floats;
        break;
      }

      // repeated float floats = 7;
      case 7: {
        if (tag == 61) {
         parse_floats:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 61, input, this->mutable_floats())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_floats())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_floats;
        if (input->ExpectTag(64)) goto parse_ints;
        break;
      }

      // repeated int64 ints = 8;
      case 8: {
        if (tag == 64) {
         parse_ints:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 64, input, this->mutable_ints())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ints())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_ints;
        if (input->ExpectTag(74)) goto parse_strings;
        break;
      }

      // repeated bytes strings = 9;
      case 9: {
        if (tag == 74) {
         parse_strings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_strings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_strings;
        if (input->ExpectTag(82)) goto parse_tensors;
        break;
      }

      // repeated .onnx.TensorProto tensors = 10;
      case 10: {
        if (tag == 82) {
         parse_tensors:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tensors()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_tensors;
        if (input->ExpectTag(90)) goto parse_graphs;
        break;
      }

      // repeated .onnx.GraphProto graphs = 11;
      case 11: {
        if (tag == 90) {
         parse_graphs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_graphs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_graphs;
        if (input->ExpectTag(106)) goto parse_doc_string;
        break;
      }

      // optional string doc_string = 13;
      case 13: {
        if (tag == 106) {
         parse_doc_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), this->doc_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "doc_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_type;
        break;
      }

      // optional .onnx.AttributeProto.AttributeType type = 20;
      case 20: {
        if (tag == 160) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::onnx::AttributeProto_AttributeType_IsValid(value)) {
            set_type(static_cast< ::onnx::AttributeProto_AttributeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(20, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_ref_attr_name;
        break;
      }

      // optional string ref_attr_name = 21;
      case 21: {
        if (tag == 170) {
         parse_ref_attr_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ref_attr_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ref_attr_name().data(), this->ref_attr_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ref_attr_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.AttributeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.AttributeProto)
  return false;
#undef DO_
}

void AttributeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.AttributeProto)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional float f = 2;
  if (has_f()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->f(), output);
  }

  // optional int64 i = 3;
  if (has_i()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->i(), output);
  }

  // optional bytes s = 4;
  if (has_s()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->s(), output);
  }

  // optional .onnx.TensorProto t = 5;
  if (has_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->t(), output);
  }

  // optional .onnx.GraphProto g = 6;
  if (has_g()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->g(), output);
  }

  // repeated float floats = 7;
  for (int i = 0; i < this->floats_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      7, this->floats(i), output);
  }

  // repeated int64 ints = 8;
  for (int i = 0; i < this->ints_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      8, this->ints(i), output);
  }

  // repeated bytes strings = 9;
  for (int i = 0; i < this->strings_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      9, this->strings(i), output);
  }

  // repeated .onnx.TensorProto tensors = 10;
  for (int i = 0; i < this->tensors_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->tensors(i), output);
  }

  // repeated .onnx.GraphProto graphs = 11;
  for (int i = 0; i < this->graphs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->graphs(i), output);
  }

  // optional string doc_string = 13;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->doc_string(), output);
  }

  // optional .onnx.AttributeProto.AttributeType type = 20;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      20, this->type(), output);
  }

  // optional string ref_attr_name = 21;
  if (has_ref_attr_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ref_attr_name().data(), this->ref_attr_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ref_attr_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->ref_attr_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.AttributeProto)
}

::google::protobuf::uint8* AttributeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onnx.AttributeProto)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional float f = 2;
  if (has_f()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->f(), target);
  }

  // optional int64 i = 3;
  if (has_i()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->i(), target);
  }

  // optional bytes s = 4;
  if (has_s()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->s(), target);
  }

  // optional .onnx.TensorProto t = 5;
  if (has_t()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->t(), target);
  }

  // optional .onnx.GraphProto g = 6;
  if (has_g()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->g(), target);
  }

  // repeated float floats = 7;
  for (int i = 0; i < this->floats_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(7, this->floats(i), target);
  }

  // repeated int64 ints = 8;
  for (int i = 0; i < this->ints_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(8, this->ints(i), target);
  }

  // repeated bytes strings = 9;
  for (int i = 0; i < this->strings_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(9, this->strings(i), target);
  }

  // repeated .onnx.TensorProto tensors = 10;
  for (int i = 0; i < this->tensors_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->tensors(i), target);
  }

  // repeated .onnx.GraphProto graphs = 11;
  for (int i = 0; i < this->graphs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->graphs(i), target);
  }

  // optional string doc_string = 13;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->doc_string(), target);
  }

  // optional .onnx.AttributeProto.AttributeType type = 20;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      20, this->type(), target);
  }

  // optional string ref_attr_name = 21;
  if (has_ref_attr_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ref_attr_name().data(), this->ref_attr_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ref_attr_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->ref_attr_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.AttributeProto)
  return target;
}

int AttributeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string ref_attr_name = 21;
    if (has_ref_attr_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ref_attr_name());
    }

    // optional string doc_string = 13;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

    // optional .onnx.AttributeProto.AttributeType type = 20;
    if (has_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional float f = 2;
    if (has_f()) {
      total_size += 1 + 4;
    }

    // optional int64 i = 3;
    if (has_i()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->i());
    }

    // optional bytes s = 4;
    if (has_s()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->s());
    }

    // optional .onnx.TensorProto t = 5;
    if (has_t()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->t());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .onnx.GraphProto g = 6;
    if (has_g()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->g());
    }

  }
  // repeated float floats = 7;
  {
    int data_size = 0;
    data_size = 4 * this->floats_size();
    total_size += 1 * this->floats_size() + data_size;
  }

  // repeated int64 ints = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->ints_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->ints(i));
    }
    total_size += 1 * this->ints_size() + data_size;
  }

  // repeated bytes strings = 9;
  total_size += 1 * this->strings_size();
  for (int i = 0; i < this->strings_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->strings(i));
  }

  // repeated .onnx.TensorProto tensors = 10;
  total_size += 1 * this->tensors_size();
  for (int i = 0; i < this->tensors_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tensors(i));
  }

  // repeated .onnx.GraphProto graphs = 11;
  total_size += 1 * this->graphs_size();
  for (int i = 0; i < this->graphs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->graphs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttributeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AttributeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AttributeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AttributeProto::MergeFrom(const AttributeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  floats_.MergeFrom(from.floats_);
  ints_.MergeFrom(from.ints_);
  strings_.MergeFrom(from.strings_);
  tensors_.MergeFrom(from.tensors_);
  graphs_.MergeFrom(from.graphs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_ref_attr_name()) {
      set_ref_attr_name(from.ref_attr_name());
    }
    if (from.has_doc_string()) {
      set_doc_string(from.doc_string());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_f()) {
      set_f(from.f());
    }
    if (from.has_i()) {
      set_i(from.i());
    }
    if (from.has_s()) {
      set_s(from.s());
    }
    if (from.has_t()) {
      mutable_t()->::onnx::TensorProto::MergeFrom(from.t());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_g()) {
      mutable_g()->::onnx::GraphProto::MergeFrom(from.g());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AttributeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeProto::CopyFrom(const AttributeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttributeProto::IsInitialized() const {

  return true;
}

void AttributeProto::Swap(AttributeProto* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(ref_attr_name_, other->ref_attr_name_);
    std::swap(doc_string_, other->doc_string_);
    std::swap(type_, other->type_);
    std::swap(f_, other->f_);
    std::swap(i_, other->i_);
    std::swap(s_, other->s_);
    std::swap(t_, other->t_);
    std::swap(g_, other->g_);
    floats_.Swap(&other->floats_);
    ints_.Swap(&other->ints_);
    strings_.Swap(&other->strings_);
    tensors_.Swap(&other->tensors_);
    graphs_.Swap(&other->graphs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AttributeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttributeProto_descriptor_;
  metadata.reflection = AttributeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ValueInfoProto::kNameFieldNumber;
const int ValueInfoProto::kTypeFieldNumber;
const int ValueInfoProto::kDocStringFieldNumber;
#endif  // !_MSC_VER

ValueInfoProto::ValueInfoProto()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.ValueInfoProto)
}

void ValueInfoProto::InitAsDefaultInstance() {
  type_ = const_cast< ::onnx::TypeProto*>(&::onnx::TypeProto::default_instance());
}

ValueInfoProto::ValueInfoProto(const ValueInfoProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onnx.ValueInfoProto)
}

void ValueInfoProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = NULL;
  doc_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ValueInfoProto::~ValueInfoProto() {
  // @@protoc_insertion_point(destructor:onnx.ValueInfoProto)
  SharedDtor();
}

void ValueInfoProto::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (doc_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete doc_string_;
  }
  if (this != default_instance_) {
    delete type_;
  }
}

void ValueInfoProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValueInfoProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ValueInfoProto_descriptor_;
}

const ValueInfoProto& ValueInfoProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_onnx_2eproto();
  return *default_instance_;
}

ValueInfoProto* ValueInfoProto::default_instance_ = NULL;

ValueInfoProto* ValueInfoProto::New() const {
  return new ValueInfoProto;
}

void ValueInfoProto::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_type()) {
      if (type_ != NULL) type_->::onnx::TypeProto::Clear();
    }
    if (has_doc_string()) {
      if (doc_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        doc_string_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ValueInfoProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.ValueInfoProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // optional .onnx.TypeProto type = 2;
      case 2: {
        if (tag == 18) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_doc_string;
        break;
      }

      // optional string doc_string = 3;
      case 3: {
        if (tag == 26) {
         parse_doc_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), this->doc_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "doc_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.ValueInfoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.ValueInfoProto)
  return false;
#undef DO_
}

void ValueInfoProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.ValueInfoProto)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .onnx.TypeProto type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->type(), output);
  }

  // optional string doc_string = 3;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->doc_string(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.ValueInfoProto)
}

::google::protobuf::uint8* ValueInfoProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onnx.ValueInfoProto)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .onnx.TypeProto type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->type(), target);
  }

  // optional string doc_string = 3;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->doc_string(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.ValueInfoProto)
  return target;
}

int ValueInfoProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .onnx.TypeProto type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->type());
    }

    // optional string doc_string = 3;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValueInfoProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ValueInfoProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ValueInfoProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ValueInfoProto::MergeFrom(const ValueInfoProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_type()) {
      mutable_type()->::onnx::TypeProto::MergeFrom(from.type());
    }
    if (from.has_doc_string()) {
      set_doc_string(from.doc_string());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ValueInfoProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueInfoProto::CopyFrom(const ValueInfoProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueInfoProto::IsInitialized() const {

  return true;
}

void ValueInfoProto::Swap(ValueInfoProto* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(type_, other->type_);
    std::swap(doc_string_, other->doc_string_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ValueInfoProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ValueInfoProto_descriptor_;
  metadata.reflection = ValueInfoProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NodeProto::kInputFieldNumber;
const int NodeProto::kOutputFieldNumber;
const int NodeProto::kNameFieldNumber;
const int NodeProto::kOpTypeFieldNumber;
const int NodeProto::kDomainFieldNumber;
const int NodeProto::kAttributeFieldNumber;
const int NodeProto::kDocStringFieldNumber;
#endif  // !_MSC_VER

NodeProto::NodeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.NodeProto)
}

void NodeProto::InitAsDefaultInstance() {
}

NodeProto::NodeProto(const NodeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onnx.NodeProto)
}

void NodeProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NodeProto::~NodeProto() {
  // @@protoc_insertion_point(destructor:onnx.NodeProto)
  SharedDtor();
}

void NodeProto::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (op_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete op_type_;
  }
  if (domain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete domain_;
  }
  if (doc_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete doc_string_;
  }
  if (this != default_instance_) {
  }
}

void NodeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeProto_descriptor_;
}

const NodeProto& NodeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_onnx_2eproto();
  return *default_instance_;
}

NodeProto* NodeProto::default_instance_ = NULL;

NodeProto* NodeProto::New() const {
  return new NodeProto;
}

void NodeProto::Clear() {
  if (_has_bits_[0 / 32] & 92) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_op_type()) {
      if (op_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        op_type_->clear();
      }
    }
    if (has_domain()) {
      if (domain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        domain_->clear();
      }
    }
    if (has_doc_string()) {
      if (doc_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        doc_string_->clear();
      }
    }
  }
  input_.Clear();
  output_.Clear();
  attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NodeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.NodeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string input = 1;
      case 1: {
        if (tag == 10) {
         parse_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_input()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->input(this->input_size() - 1).data(),
            this->input(this->input_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "input");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_input;
        if (input->ExpectTag(18)) goto parse_output;
        break;
      }

      // repeated string output = 2;
      case 2: {
        if (tag == 18) {
         parse_output:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_output()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->output(this->output_size() - 1).data(),
            this->output(this->output_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "output");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_output;
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_op_type;
        break;
      }

      // optional string op_type = 4;
      case 4: {
        if (tag == 34) {
         parse_op_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->op_type().data(), this->op_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "op_type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_attribute;
        break;
      }

      // repeated .onnx.AttributeProto attribute = 5;
      case 5: {
        if (tag == 42) {
         parse_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attribute()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_attribute;
        if (input->ExpectTag(50)) goto parse_doc_string;
        break;
      }

      // optional string doc_string = 6;
      case 6: {
        if (tag == 50) {
         parse_doc_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), this->doc_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "doc_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_domain;
        break;
      }

      // optional string domain = 7;
      case 7: {
        if (tag == 58) {
         parse_domain:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->domain().data(), this->domain().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "domain");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.NodeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.NodeProto)
  return false;
#undef DO_
}

void NodeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.NodeProto)
  // repeated string input = 1;
  for (int i = 0; i < this->input_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->input(i).data(), this->input(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "input");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->input(i), output);
  }

  // repeated string output = 2;
  for (int i = 0; i < this->output_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->output(i).data(), this->output(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "output");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->output(i), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string op_type = 4;
  if (has_op_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_type().data(), this->op_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "op_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->op_type(), output);
  }

  // repeated .onnx.AttributeProto attribute = 5;
  for (int i = 0; i < this->attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->attribute(i), output);
  }

  // optional string doc_string = 6;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->doc_string(), output);
  }

  // optional string domain = 7;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->domain(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.NodeProto)
}

::google::protobuf::uint8* NodeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onnx.NodeProto)
  // repeated string input = 1;
  for (int i = 0; i < this->input_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input(i).data(), this->input(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "input");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->input(i), target);
  }

  // repeated string output = 2;
  for (int i = 0; i < this->output_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output(i).data(), this->output(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "output");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->output(i), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string op_type = 4;
  if (has_op_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_type().data(), this->op_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "op_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->op_type(), target);
  }

  // repeated .onnx.AttributeProto attribute = 5;
  for (int i = 0; i < this->attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->attribute(i), target);
  }

  // optional string doc_string = 6;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->doc_string(), target);
  }

  // optional string domain = 7;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->domain(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.NodeProto)
  return target;
}

int NodeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string op_type = 4;
    if (has_op_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->op_type());
    }

    // optional string domain = 7;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->domain());
    }

    // optional string doc_string = 6;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

  }
  // repeated string input = 1;
  total_size += 1 * this->input_size();
  for (int i = 0; i < this->input_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->input(i));
  }

  // repeated string output = 2;
  total_size += 1 * this->output_size();
  for (int i = 0; i < this->output_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->output(i));
  }

  // repeated .onnx.AttributeProto attribute = 5;
  total_size += 1 * this->attribute_size();
  for (int i = 0; i < this->attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NodeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NodeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NodeProto::MergeFrom(const NodeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  input_.MergeFrom(from.input_);
  output_.MergeFrom(from.output_);
  attribute_.MergeFrom(from.attribute_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_op_type()) {
      set_op_type(from.op_type());
    }
    if (from.has_domain()) {
      set_domain(from.domain());
    }
    if (from.has_doc_string()) {
      set_doc_string(from.doc_string());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NodeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeProto::CopyFrom(const NodeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeProto::IsInitialized() const {

  return true;
}

void NodeProto::Swap(NodeProto* other) {
  if (other != this) {
    input_.Swap(&other->input_);
    output_.Swap(&other->output_);
    std::swap(name_, other->name_);
    std::swap(op_type_, other->op_type_);
    std::swap(domain_, other->domain_);
    attribute_.Swap(&other->attribute_);
    std::swap(doc_string_, other->doc_string_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NodeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeProto_descriptor_;
  metadata.reflection = NodeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ModelProto::kIrVersionFieldNumber;
const int ModelProto::kOpsetImportFieldNumber;
const int ModelProto::kProducerNameFieldNumber;
const int ModelProto::kProducerVersionFieldNumber;
const int ModelProto::kDomainFieldNumber;
const int ModelProto::kModelVersionFieldNumber;
const int ModelProto::kDocStringFieldNumber;
const int ModelProto::kGraphFieldNumber;
const int ModelProto::kMetadataPropsFieldNumber;
#endif  // !_MSC_VER

ModelProto::ModelProto()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.ModelProto)
}

void ModelProto::InitAsDefaultInstance() {
  graph_ = const_cast< ::onnx::GraphProto*>(&::onnx::GraphProto::default_instance());
}

ModelProto::ModelProto(const ModelProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onnx.ModelProto)
}

void ModelProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ir_version_ = GOOGLE_LONGLONG(0);
  producer_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  producer_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_version_ = GOOGLE_LONGLONG(0);
  doc_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  graph_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ModelProto::~ModelProto() {
  // @@protoc_insertion_point(destructor:onnx.ModelProto)
  SharedDtor();
}

void ModelProto::SharedDtor() {
  if (producer_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete producer_name_;
  }
  if (producer_version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete producer_version_;
  }
  if (domain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete domain_;
  }
  if (doc_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete doc_string_;
  }
  if (this != default_instance_) {
    delete graph_;
  }
}

void ModelProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModelProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ModelProto_descriptor_;
}

const ModelProto& ModelProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_onnx_2eproto();
  return *default_instance_;
}

ModelProto* ModelProto::default_instance_ = NULL;

ModelProto* ModelProto::New() const {
  return new ModelProto;
}

void ModelProto::Clear() {
  if (_has_bits_[0 / 32] & 253) {
    ir_version_ = GOOGLE_LONGLONG(0);
    if (has_producer_name()) {
      if (producer_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        producer_name_->clear();
      }
    }
    if (has_producer_version()) {
      if (producer_version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        producer_version_->clear();
      }
    }
    if (has_domain()) {
      if (domain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        domain_->clear();
      }
    }
    model_version_ = GOOGLE_LONGLONG(0);
    if (has_doc_string()) {
      if (doc_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        doc_string_->clear();
      }
    }
    if (has_graph()) {
      if (graph_ != NULL) graph_->::onnx::GraphProto::Clear();
    }
  }
  opset_import_.Clear();
  metadata_props_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ModelProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.ModelProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ir_version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ir_version_)));
          set_has_ir_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_producer_name;
        break;
      }

      // optional string producer_name = 2;
      case 2: {
        if (tag == 18) {
         parse_producer_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_producer_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->producer_name().data(), this->producer_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "producer_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_producer_version;
        break;
      }

      // optional string producer_version = 3;
      case 3: {
        if (tag == 26) {
         parse_producer_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_producer_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->producer_version().data(), this->producer_version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "producer_version");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_domain;
        break;
      }

      // optional string domain = 4;
      case 4: {
        if (tag == 34) {
         parse_domain:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->domain().data(), this->domain().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "domain");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_model_version;
        break;
      }

      // optional int64 model_version = 5;
      case 5: {
        if (tag == 40) {
         parse_model_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &model_version_)));
          set_has_model_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_doc_string;
        break;
      }

      // optional string doc_string = 6;
      case 6: {
        if (tag == 50) {
         parse_doc_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), this->doc_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "doc_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_graph;
        break;
      }

      // optional .onnx.GraphProto graph = 7;
      case 7: {
        if (tag == 58) {
         parse_graph:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_graph()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_opset_import;
        break;
      }

      // repeated .onnx.OperatorSetIdProto opset_import = 8;
      case 8: {
        if (tag == 66) {
         parse_opset_import:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_opset_import()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_opset_import;
        if (input->ExpectTag(114)) goto parse_metadata_props;
        break;
      }

      // repeated .onnx.StringStringEntryProto metadata_props = 14;
      case 14: {
        if (tag == 114) {
         parse_metadata_props:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_metadata_props()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_metadata_props;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.ModelProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.ModelProto)
  return false;
#undef DO_
}

void ModelProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.ModelProto)
  // optional int64 ir_version = 1;
  if (has_ir_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ir_version(), output);
  }

  // optional string producer_name = 2;
  if (has_producer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->producer_name().data(), this->producer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "producer_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->producer_name(), output);
  }

  // optional string producer_version = 3;
  if (has_producer_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->producer_version().data(), this->producer_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "producer_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->producer_version(), output);
  }

  // optional string domain = 4;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->domain(), output);
  }

  // optional int64 model_version = 5;
  if (has_model_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->model_version(), output);
  }

  // optional string doc_string = 6;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->doc_string(), output);
  }

  // optional .onnx.GraphProto graph = 7;
  if (has_graph()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->graph(), output);
  }

  // repeated .onnx.OperatorSetIdProto opset_import = 8;
  for (int i = 0; i < this->opset_import_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->opset_import(i), output);
  }

  // repeated .onnx.StringStringEntryProto metadata_props = 14;
  for (int i = 0; i < this->metadata_props_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->metadata_props(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.ModelProto)
}

::google::protobuf::uint8* ModelProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onnx.ModelProto)
  // optional int64 ir_version = 1;
  if (has_ir_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ir_version(), target);
  }

  // optional string producer_name = 2;
  if (has_producer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->producer_name().data(), this->producer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "producer_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->producer_name(), target);
  }

  // optional string producer_version = 3;
  if (has_producer_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->producer_version().data(), this->producer_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "producer_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->producer_version(), target);
  }

  // optional string domain = 4;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->domain(), target);
  }

  // optional int64 model_version = 5;
  if (has_model_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->model_version(), target);
  }

  // optional string doc_string = 6;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->doc_string(), target);
  }

  // optional .onnx.GraphProto graph = 7;
  if (has_graph()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->graph(), target);
  }

  // repeated .onnx.OperatorSetIdProto opset_import = 8;
  for (int i = 0; i < this->opset_import_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->opset_import(i), target);
  }

  // repeated .onnx.StringStringEntryProto metadata_props = 14;
  for (int i = 0; i < this->metadata_props_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->metadata_props(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.ModelProto)
  return target;
}

int ModelProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 ir_version = 1;
    if (has_ir_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ir_version());
    }

    // optional string producer_name = 2;
    if (has_producer_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->producer_name());
    }

    // optional string producer_version = 3;
    if (has_producer_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->producer_version());
    }

    // optional string domain = 4;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->domain());
    }

    // optional int64 model_version = 5;
    if (has_model_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->model_version());
    }

    // optional string doc_string = 6;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

    // optional .onnx.GraphProto graph = 7;
    if (has_graph()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->graph());
    }

  }
  // repeated .onnx.OperatorSetIdProto opset_import = 8;
  total_size += 1 * this->opset_import_size();
  for (int i = 0; i < this->opset_import_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->opset_import(i));
  }

  // repeated .onnx.StringStringEntryProto metadata_props = 14;
  total_size += 1 * this->metadata_props_size();
  for (int i = 0; i < this->metadata_props_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->metadata_props(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModelProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ModelProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ModelProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ModelProto::MergeFrom(const ModelProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  opset_import_.MergeFrom(from.opset_import_);
  metadata_props_.MergeFrom(from.metadata_props_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ir_version()) {
      set_ir_version(from.ir_version());
    }
    if (from.has_producer_name()) {
      set_producer_name(from.producer_name());
    }
    if (from.has_producer_version()) {
      set_producer_version(from.producer_version());
    }
    if (from.has_domain()) {
      set_domain(from.domain());
    }
    if (from.has_model_version()) {
      set_model_version(from.model_version());
    }
    if (from.has_doc_string()) {
      set_doc_string(from.doc_string());
    }
    if (from.has_graph()) {
      mutable_graph()->::onnx::GraphProto::MergeFrom(from.graph());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ModelProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelProto::CopyFrom(const ModelProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelProto::IsInitialized() const {

  return true;
}

void ModelProto::Swap(ModelProto* other) {
  if (other != this) {
    std::swap(ir_version_, other->ir_version_);
    opset_import_.Swap(&other->opset_import_);
    std::swap(producer_name_, other->producer_name_);
    std::swap(producer_version_, other->producer_version_);
    std::swap(domain_, other->domain_);
    std::swap(model_version_, other->model_version_);
    std::swap(doc_string_, other->doc_string_);
    std::swap(graph_, other->graph_);
    metadata_props_.Swap(&other->metadata_props_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ModelProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ModelProto_descriptor_;
  metadata.reflection = ModelProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StringStringEntryProto::kKeyFieldNumber;
const int StringStringEntryProto::kValueFieldNumber;
#endif  // !_MSC_VER

StringStringEntryProto::StringStringEntryProto()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.StringStringEntryProto)
}

void StringStringEntryProto::InitAsDefaultInstance() {
}

StringStringEntryProto::StringStringEntryProto(const StringStringEntryProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onnx.StringStringEntryProto)
}

void StringStringEntryProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StringStringEntryProto::~StringStringEntryProto() {
  // @@protoc_insertion_point(destructor:onnx.StringStringEntryProto)
  SharedDtor();
}

void StringStringEntryProto::SharedDtor() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (this != default_instance_) {
  }
}

void StringStringEntryProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringStringEntryProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StringStringEntryProto_descriptor_;
}

const StringStringEntryProto& StringStringEntryProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_onnx_2eproto();
  return *default_instance_;
}

StringStringEntryProto* StringStringEntryProto::default_instance_ = NULL;

StringStringEntryProto* StringStringEntryProto::New() const {
  return new StringStringEntryProto;
}

void StringStringEntryProto::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_key()) {
      if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        key_->clear();
      }
    }
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        value_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StringStringEntryProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.StringStringEntryProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.StringStringEntryProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.StringStringEntryProto)
  return false;
#undef DO_
}

void StringStringEntryProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.StringStringEntryProto)
  // optional string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.StringStringEntryProto)
}

::google::protobuf::uint8* StringStringEntryProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onnx.StringStringEntryProto)
  // optional string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.StringStringEntryProto)
  return target;
}

int StringStringEntryProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringStringEntryProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StringStringEntryProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StringStringEntryProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StringStringEntryProto::MergeFrom(const StringStringEntryProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StringStringEntryProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringStringEntryProto::CopyFrom(const StringStringEntryProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringStringEntryProto::IsInitialized() const {

  return true;
}

void StringStringEntryProto::Swap(StringStringEntryProto* other) {
  if (other != this) {
    std::swap(key_, other->key_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StringStringEntryProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StringStringEntryProto_descriptor_;
  metadata.reflection = StringStringEntryProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TensorAnnotation::kTensorNameFieldNumber;
const int TensorAnnotation::kQuantParameterTensorNamesFieldNumber;
#endif  // !_MSC_VER

TensorAnnotation::TensorAnnotation()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.TensorAnnotation)
}

void TensorAnnotation::InitAsDefaultInstance() {
}

TensorAnnotation::TensorAnnotation(const TensorAnnotation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onnx.TensorAnnotation)
}

void TensorAnnotation::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tensor_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TensorAnnotation::~TensorAnnotation() {
  // @@protoc_insertion_point(destructor:onnx.TensorAnnotation)
  SharedDtor();
}

void TensorAnnotation::SharedDtor() {
  if (tensor_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tensor_name_;
  }
  if (this != default_instance_) {
  }
}

void TensorAnnotation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TensorAnnotation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TensorAnnotation_descriptor_;
}

const TensorAnnotation& TensorAnnotation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_onnx_2eproto();
  return *default_instance_;
}

TensorAnnotation* TensorAnnotation::default_instance_ = NULL;

TensorAnnotation* TensorAnnotation::New() const {
  return new TensorAnnotation;
}

void TensorAnnotation::Clear() {
  if (has_tensor_name()) {
    if (tensor_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      tensor_name_->clear();
    }
  }
  quant_parameter_tensor_names_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TensorAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.TensorAnnotation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string tensor_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tensor_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tensor_name().data(), this->tensor_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tensor_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_quant_parameter_tensor_names;
        break;
      }

      // repeated .onnx.StringStringEntryProto quant_parameter_tensor_names = 2;
      case 2: {
        if (tag == 18) {
         parse_quant_parameter_tensor_names:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_quant_parameter_tensor_names()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_quant_parameter_tensor_names;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.TensorAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.TensorAnnotation)
  return false;
#undef DO_
}

void TensorAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.TensorAnnotation)
  // optional string tensor_name = 1;
  if (has_tensor_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tensor_name().data(), this->tensor_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tensor_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tensor_name(), output);
  }

  // repeated .onnx.StringStringEntryProto quant_parameter_tensor_names = 2;
  for (int i = 0; i < this->quant_parameter_tensor_names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->quant_parameter_tensor_names(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.TensorAnnotation)
}

::google::protobuf::uint8* TensorAnnotation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TensorAnnotation)
  // optional string tensor_name = 1;
  if (has_tensor_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tensor_name().data(), this->tensor_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tensor_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tensor_name(), target);
  }

  // repeated .onnx.StringStringEntryProto quant_parameter_tensor_names = 2;
  for (int i = 0; i < this->quant_parameter_tensor_names_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->quant_parameter_tensor_names(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TensorAnnotation)
  return target;
}

int TensorAnnotation::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string tensor_name = 1;
    if (has_tensor_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tensor_name());
    }

  }
  // repeated .onnx.StringStringEntryProto quant_parameter_tensor_names = 2;
  total_size += 1 * this->quant_parameter_tensor_names_size();
  for (int i = 0; i < this->quant_parameter_tensor_names_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->quant_parameter_tensor_names(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TensorAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TensorAnnotation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TensorAnnotation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TensorAnnotation::MergeFrom(const TensorAnnotation& from) {
  GOOGLE_CHECK_NE(&from, this);
  quant_parameter_tensor_names_.MergeFrom(from.quant_parameter_tensor_names_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tensor_name()) {
      set_tensor_name(from.tensor_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TensorAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorAnnotation::CopyFrom(const TensorAnnotation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorAnnotation::IsInitialized() const {

  return true;
}

void TensorAnnotation::Swap(TensorAnnotation* other) {
  if (other != this) {
    std::swap(tensor_name_, other->tensor_name_);
    quant_parameter_tensor_names_.Swap(&other->quant_parameter_tensor_names_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TensorAnnotation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TensorAnnotation_descriptor_;
  metadata.reflection = TensorAnnotation_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GraphProto::kNodeFieldNumber;
const int GraphProto::kNameFieldNumber;
const int GraphProto::kInitializerFieldNumber;
const int GraphProto::kDocStringFieldNumber;
const int GraphProto::kInputFieldNumber;
const int GraphProto::kOutputFieldNumber;
const int GraphProto::kValueInfoFieldNumber;
const int GraphProto::kQuantizationAnnotationFieldNumber;
#endif  // !_MSC_VER

GraphProto::GraphProto()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.GraphProto)
}

void GraphProto::InitAsDefaultInstance() {
}

GraphProto::GraphProto(const GraphProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onnx.GraphProto)
}

void GraphProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GraphProto::~GraphProto() {
  // @@protoc_insertion_point(destructor:onnx.GraphProto)
  SharedDtor();
}

void GraphProto::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (doc_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete doc_string_;
  }
  if (this != default_instance_) {
  }
}

void GraphProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GraphProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GraphProto_descriptor_;
}

const GraphProto& GraphProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_onnx_2eproto();
  return *default_instance_;
}

GraphProto* GraphProto::default_instance_ = NULL;

GraphProto* GraphProto::New() const {
  return new GraphProto;
}

void GraphProto::Clear() {
  if (_has_bits_[0 / 32] & 10) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_doc_string()) {
      if (doc_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        doc_string_->clear();
      }
    }
  }
  node_.Clear();
  initializer_.Clear();
  input_.Clear();
  output_.Clear();
  value_info_.Clear();
  quantization_annotation_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GraphProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.GraphProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .onnx.NodeProto node = 1;
      case 1: {
        if (tag == 10) {
         parse_node:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_node()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_node;
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_initializer;
        break;
      }

      // repeated .onnx.TensorProto initializer = 5;
      case 5: {
        if (tag == 42) {
         parse_initializer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_initializer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_initializer;
        if (input->ExpectTag(82)) goto parse_doc_string;
        break;
      }

      // optional string doc_string = 10;
      case 10: {
        if (tag == 82) {
         parse_doc_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), this->doc_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "doc_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_input;
        break;
      }

      // repeated .onnx.ValueInfoProto input = 11;
      case 11: {
        if (tag == 90) {
         parse_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_input()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_input;
        if (input->ExpectTag(98)) goto parse_output;
        break;
      }

      // repeated .onnx.ValueInfoProto output = 12;
      case 12: {
        if (tag == 98) {
         parse_output:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_output()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_output;
        if (input->ExpectTag(106)) goto parse_value_info;
        break;
      }

      // repeated .onnx.ValueInfoProto value_info = 13;
      case 13: {
        if (tag == 106) {
         parse_value_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_value_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_value_info;
        if (input->ExpectTag(114)) goto parse_quantization_annotation;
        break;
      }

      // repeated .onnx.TensorAnnotation quantization_annotation = 14;
      case 14: {
        if (tag == 114) {
         parse_quantization_annotation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_quantization_annotation()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_quantization_annotation;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.GraphProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.GraphProto)
  return false;
#undef DO_
}

void GraphProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.GraphProto)
  // repeated .onnx.NodeProto node = 1;
  for (int i = 0; i < this->node_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->node(i), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .onnx.TensorProto initializer = 5;
  for (int i = 0; i < this->initializer_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->initializer(i), output);
  }

  // optional string doc_string = 10;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->doc_string(), output);
  }

  // repeated .onnx.ValueInfoProto input = 11;
  for (int i = 0; i < this->input_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->input(i), output);
  }

  // repeated .onnx.ValueInfoProto output = 12;
  for (int i = 0; i < this->output_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->output(i), output);
  }

  // repeated .onnx.ValueInfoProto value_info = 13;
  for (int i = 0; i < this->value_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->value_info(i), output);
  }

  // repeated .onnx.TensorAnnotation quantization_annotation = 14;
  for (int i = 0; i < this->quantization_annotation_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->quantization_annotation(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.GraphProto)
}

::google::protobuf::uint8* GraphProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onnx.GraphProto)
  // repeated .onnx.NodeProto node = 1;
  for (int i = 0; i < this->node_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->node(i), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .onnx.TensorProto initializer = 5;
  for (int i = 0; i < this->initializer_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->initializer(i), target);
  }

  // optional string doc_string = 10;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->doc_string(), target);
  }

  // repeated .onnx.ValueInfoProto input = 11;
  for (int i = 0; i < this->input_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->input(i), target);
  }

  // repeated .onnx.ValueInfoProto output = 12;
  for (int i = 0; i < this->output_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->output(i), target);
  }

  // repeated .onnx.ValueInfoProto value_info = 13;
  for (int i = 0; i < this->value_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->value_info(i), target);
  }

  // repeated .onnx.TensorAnnotation quantization_annotation = 14;
  for (int i = 0; i < this->quantization_annotation_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->quantization_annotation(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.GraphProto)
  return target;
}

int GraphProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string doc_string = 10;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

  }
  // repeated .onnx.NodeProto node = 1;
  total_size += 1 * this->node_size();
  for (int i = 0; i < this->node_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->node(i));
  }

  // repeated .onnx.TensorProto initializer = 5;
  total_size += 1 * this->initializer_size();
  for (int i = 0; i < this->initializer_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->initializer(i));
  }

  // repeated .onnx.ValueInfoProto input = 11;
  total_size += 1 * this->input_size();
  for (int i = 0; i < this->input_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->input(i));
  }

  // repeated .onnx.ValueInfoProto output = 12;
  total_size += 1 * this->output_size();
  for (int i = 0; i < this->output_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->output(i));
  }

  // repeated .onnx.ValueInfoProto value_info = 13;
  total_size += 1 * this->value_info_size();
  for (int i = 0; i < this->value_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->value_info(i));
  }

  // repeated .onnx.TensorAnnotation quantization_annotation = 14;
  total_size += 1 * this->quantization_annotation_size();
  for (int i = 0; i < this->quantization_annotation_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->quantization_annotation(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GraphProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GraphProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GraphProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GraphProto::MergeFrom(const GraphProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  node_.MergeFrom(from.node_);
  initializer_.MergeFrom(from.initializer_);
  input_.MergeFrom(from.input_);
  output_.MergeFrom(from.output_);
  value_info_.MergeFrom(from.value_info_);
  quantization_annotation_.MergeFrom(from.quantization_annotation_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_doc_string()) {
      set_doc_string(from.doc_string());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GraphProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphProto::CopyFrom(const GraphProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphProto::IsInitialized() const {

  return true;
}

void GraphProto::Swap(GraphProto* other) {
  if (other != this) {
    node_.Swap(&other->node_);
    std::swap(name_, other->name_);
    initializer_.Swap(&other->initializer_);
    std::swap(doc_string_, other->doc_string_);
    input_.Swap(&other->input_);
    output_.Swap(&other->output_);
    value_info_.Swap(&other->value_info_);
    quantization_annotation_.Swap(&other->quantization_annotation_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GraphProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GraphProto_descriptor_;
  metadata.reflection = GraphProto_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* TensorProto_DataType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TensorProto_DataType_descriptor_;
}
bool TensorProto_DataType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const TensorProto_DataType TensorProto::UNDEFINED;
const TensorProto_DataType TensorProto::FLOAT;
const TensorProto_DataType TensorProto::UINT8;
const TensorProto_DataType TensorProto::INT8;
const TensorProto_DataType TensorProto::UINT16;
const TensorProto_DataType TensorProto::INT16;
const TensorProto_DataType TensorProto::INT32;
const TensorProto_DataType TensorProto::INT64;
const TensorProto_DataType TensorProto::STRING;
const TensorProto_DataType TensorProto::BOOL;
const TensorProto_DataType TensorProto::FLOAT16;
const TensorProto_DataType TensorProto::DOUBLE;
const TensorProto_DataType TensorProto::UINT32;
const TensorProto_DataType TensorProto::UINT64;
const TensorProto_DataType TensorProto::COMPLEX64;
const TensorProto_DataType TensorProto::COMPLEX128;
const TensorProto_DataType TensorProto::BFLOAT16;
const TensorProto_DataType TensorProto::DataType_MIN;
const TensorProto_DataType TensorProto::DataType_MAX;
const int TensorProto::DataType_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* TensorProto_DataLocation_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TensorProto_DataLocation_descriptor_;
}
bool TensorProto_DataLocation_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const TensorProto_DataLocation TensorProto::DEFAULT;
const TensorProto_DataLocation TensorProto::EXTERNAL;
const TensorProto_DataLocation TensorProto::DataLocation_MIN;
const TensorProto_DataLocation TensorProto::DataLocation_MAX;
const int TensorProto::DataLocation_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int TensorProto_Segment::kBeginFieldNumber;
const int TensorProto_Segment::kEndFieldNumber;
#endif  // !_MSC_VER

TensorProto_Segment::TensorProto_Segment()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.TensorProto.Segment)
}

void TensorProto_Segment::InitAsDefaultInstance() {
}

TensorProto_Segment::TensorProto_Segment(const TensorProto_Segment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onnx.TensorProto.Segment)
}

void TensorProto_Segment::SharedCtor() {
  _cached_size_ = 0;
  begin_ = GOOGLE_LONGLONG(0);
  end_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TensorProto_Segment::~TensorProto_Segment() {
  // @@protoc_insertion_point(destructor:onnx.TensorProto.Segment)
  SharedDtor();
}

void TensorProto_Segment::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TensorProto_Segment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TensorProto_Segment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TensorProto_Segment_descriptor_;
}

const TensorProto_Segment& TensorProto_Segment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_onnx_2eproto();
  return *default_instance_;
}

TensorProto_Segment* TensorProto_Segment::default_instance_ = NULL;

TensorProto_Segment* TensorProto_Segment::New() const {
  return new TensorProto_Segment;
}

void TensorProto_Segment::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TensorProto_Segment*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(begin_, end_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TensorProto_Segment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.TensorProto.Segment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 begin = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &begin_)));
          set_has_begin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_end;
        break;
      }

      // optional int64 end = 2;
      case 2: {
        if (tag == 16) {
         parse_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_)));
          set_has_end();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.TensorProto.Segment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.TensorProto.Segment)
  return false;
#undef DO_
}

void TensorProto_Segment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.TensorProto.Segment)
  // optional int64 begin = 1;
  if (has_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->begin(), output);
  }

  // optional int64 end = 2;
  if (has_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.TensorProto.Segment)
}

::google::protobuf::uint8* TensorProto_Segment::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TensorProto.Segment)
  // optional int64 begin = 1;
  if (has_begin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->begin(), target);
  }

  // optional int64 end = 2;
  if (has_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TensorProto.Segment)
  return target;
}

int TensorProto_Segment::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 begin = 1;
    if (has_begin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->begin());
    }

    // optional int64 end = 2;
    if (has_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TensorProto_Segment::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TensorProto_Segment* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TensorProto_Segment*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TensorProto_Segment::MergeFrom(const TensorProto_Segment& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_begin()) {
      set_begin(from.begin());
    }
    if (from.has_end()) {
      set_end(from.end());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TensorProto_Segment::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorProto_Segment::CopyFrom(const TensorProto_Segment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorProto_Segment::IsInitialized() const {

  return true;
}

void TensorProto_Segment::Swap(TensorProto_Segment* other) {
  if (other != this) {
    std::swap(begin_, other->begin_);
    std::swap(end_, other->end_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TensorProto_Segment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TensorProto_Segment_descriptor_;
  metadata.reflection = TensorProto_Segment_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TensorProto::kDimsFieldNumber;
const int TensorProto::kDataTypeFieldNumber;
const int TensorProto::kSegmentFieldNumber;
const int TensorProto::kFloatDataFieldNumber;
const int TensorProto::kInt32DataFieldNumber;
const int TensorProto::kStringDataFieldNumber;
const int TensorProto::kInt64DataFieldNumber;
const int TensorProto::kNameFieldNumber;
const int TensorProto::kDocStringFieldNumber;
const int TensorProto::kRawDataFieldNumber;
const int TensorProto::kExternalDataFieldNumber;
const int TensorProto::kDataLocationFieldNumber;
const int TensorProto::kDoubleDataFieldNumber;
const int TensorProto::kUint64DataFieldNumber;
#endif  // !_MSC_VER

TensorProto::TensorProto()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.TensorProto)
}

void TensorProto::InitAsDefaultInstance() {
  segment_ = const_cast< ::onnx::TensorProto_Segment*>(&::onnx::TensorProto_Segment::default_instance());
}

TensorProto::TensorProto(const TensorProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onnx.TensorProto)
}

void TensorProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_type_ = 0;
  segment_ = NULL;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raw_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_location_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TensorProto::~TensorProto() {
  // @@protoc_insertion_point(destructor:onnx.TensorProto)
  SharedDtor();
}

void TensorProto::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (doc_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete doc_string_;
  }
  if (raw_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete raw_data_;
  }
  if (this != default_instance_) {
    delete segment_;
  }
}

void TensorProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TensorProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TensorProto_descriptor_;
}

const TensorProto& TensorProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_onnx_2eproto();
  return *default_instance_;
}

TensorProto* TensorProto::default_instance_ = NULL;

TensorProto* TensorProto::New() const {
  return new TensorProto;
}

void TensorProto::Clear() {
  if (_has_bits_[0 / 32] & 134) {
    data_type_ = 0;
    if (has_segment()) {
      if (segment_ != NULL) segment_->::onnx::TensorProto_Segment::Clear();
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 2816) {
    if (has_doc_string()) {
      if (doc_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        doc_string_->clear();
      }
    }
    if (has_raw_data()) {
      if (raw_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        raw_data_->clear();
      }
    }
    data_location_ = 0;
  }
  dims_.Clear();
  float_data_.Clear();
  int32_data_.Clear();
  string_data_.Clear();
  int64_data_.Clear();
  external_data_.Clear();
  double_data_.Clear();
  uint64_data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TensorProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.TensorProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 dims = 1;
      case 1: {
        if (tag == 8) {
         parse_dims:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_dims())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_dims())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_dims;
        if (input->ExpectTag(16)) goto parse_data_type;
        break;
      }

      // optional int32 data_type = 2;
      case 2: {
        if (tag == 16) {
         parse_data_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_type_)));
          set_has_data_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_segment;
        break;
      }

      // optional .onnx.TensorProto.Segment segment = 3;
      case 3: {
        if (tag == 26) {
         parse_segment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_segment()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_float_data;
        break;
      }

      // repeated float float_data = 4 [packed = true];
      case 4: {
        if (tag == 34) {
         parse_float_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_float_data())));
        } else if (tag == 37) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34, input, this->mutable_float_data())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_int32_data;
        break;
      }

      // repeated int32 int32_data = 5 [packed = true];
      case 5: {
        if (tag == 42) {
         parse_int32_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_int32_data())));
        } else if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42, input, this->mutable_int32_data())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_string_data;
        break;
      }

      // repeated bytes string_data = 6;
      case 6: {
        if (tag == 50) {
         parse_string_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_string_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_string_data;
        if (input->ExpectTag(58)) goto parse_int64_data;
        break;
      }

      // repeated int64 int64_data = 7 [packed = true];
      case 7: {
        if (tag == 58) {
         parse_int64_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_int64_data())));
        } else if (tag == 56) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 58, input, this->mutable_int64_data())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_name;
        break;
      }

      // optional string name = 8;
      case 8: {
        if (tag == 66) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_raw_data;
        break;
      }

      // optional bytes raw_data = 9;
      case 9: {
        if (tag == 74) {
         parse_raw_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_raw_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_double_data;
        break;
      }

      // repeated double double_data = 10 [packed = true];
      case 10: {
        if (tag == 82) {
         parse_double_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_double_data())));
        } else if (tag == 81) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 82, input, this->mutable_double_data())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_uint64_data;
        break;
      }

      // repeated uint64 uint64_data = 11 [packed = true];
      case 11: {
        if (tag == 90) {
         parse_uint64_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_uint64_data())));
        } else if (tag == 88) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 90, input, this->mutable_uint64_data())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_doc_string;
        break;
      }

      // optional string doc_string = 12;
      case 12: {
        if (tag == 98) {
         parse_doc_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), this->doc_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "doc_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_external_data;
        break;
      }

      // repeated .onnx.StringStringEntryProto external_data = 13;
      case 13: {
        if (tag == 106) {
         parse_external_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_external_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_external_data;
        if (input->ExpectTag(112)) goto parse_data_location;
        break;
      }

      // optional .onnx.TensorProto.DataLocation data_location = 14;
      case 14: {
        if (tag == 112) {
         parse_data_location:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::onnx::TensorProto_DataLocation_IsValid(value)) {
            set_data_location(static_cast< ::onnx::TensorProto_DataLocation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(14, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.TensorProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.TensorProto)
  return false;
#undef DO_
}

void TensorProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.TensorProto)
  // repeated int64 dims = 1;
  for (int i = 0; i < this->dims_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->dims(i), output);
  }

  // optional int32 data_type = 2;
  if (has_data_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->data_type(), output);
  }

  // optional .onnx.TensorProto.Segment segment = 3;
  if (has_segment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->segment(), output);
  }

  // repeated float float_data = 4 [packed = true];
  if (this->float_data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_float_data_cached_byte_size_);
  }
  for (int i = 0; i < this->float_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->float_data(i), output);
  }

  // repeated int32 int32_data = 5 [packed = true];
  if (this->int32_data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_int32_data_cached_byte_size_);
  }
  for (int i = 0; i < this->int32_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->int32_data(i), output);
  }

  // repeated bytes string_data = 6;
  for (int i = 0; i < this->string_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      6, this->string_data(i), output);
  }

  // repeated int64 int64_data = 7 [packed = true];
  if (this->int64_data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_int64_data_cached_byte_size_);
  }
  for (int i = 0; i < this->int64_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->int64_data(i), output);
  }

  // optional string name = 8;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->name(), output);
  }

  // optional bytes raw_data = 9;
  if (has_raw_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->raw_data(), output);
  }

  // repeated double double_data = 10 [packed = true];
  if (this->double_data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_double_data_cached_byte_size_);
  }
  for (int i = 0; i < this->double_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->double_data(i), output);
  }

  // repeated uint64 uint64_data = 11 [packed = true];
  if (this->uint64_data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_uint64_data_cached_byte_size_);
  }
  for (int i = 0; i < this->uint64_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->uint64_data(i), output);
  }

  // optional string doc_string = 12;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->doc_string(), output);
  }

  // repeated .onnx.StringStringEntryProto external_data = 13;
  for (int i = 0; i < this->external_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->external_data(i), output);
  }

  // optional .onnx.TensorProto.DataLocation data_location = 14;
  if (has_data_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->data_location(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.TensorProto)
}

::google::protobuf::uint8* TensorProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TensorProto)
  // repeated int64 dims = 1;
  for (int i = 0; i < this->dims_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->dims(i), target);
  }

  // optional int32 data_type = 2;
  if (has_data_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->data_type(), target);
  }

  // optional .onnx.TensorProto.Segment segment = 3;
  if (has_segment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->segment(), target);
  }

  // repeated float float_data = 4 [packed = true];
  if (this->float_data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _float_data_cached_byte_size_, target);
  }
  for (int i = 0; i < this->float_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->float_data(i), target);
  }

  // repeated int32 int32_data = 5 [packed = true];
  if (this->int32_data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _int32_data_cached_byte_size_, target);
  }
  for (int i = 0; i < this->int32_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->int32_data(i), target);
  }

  // repeated bytes string_data = 6;
  for (int i = 0; i < this->string_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(6, this->string_data(i), target);
  }

  // repeated int64 int64_data = 7 [packed = true];
  if (this->int64_data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _int64_data_cached_byte_size_, target);
  }
  for (int i = 0; i < this->int64_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->int64_data(i), target);
  }

  // optional string name = 8;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->name(), target);
  }

  // optional bytes raw_data = 9;
  if (has_raw_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->raw_data(), target);
  }

  // repeated double double_data = 10 [packed = true];
  if (this->double_data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _double_data_cached_byte_size_, target);
  }
  for (int i = 0; i < this->double_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->double_data(i), target);
  }

  // repeated uint64 uint64_data = 11 [packed = true];
  if (this->uint64_data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _uint64_data_cached_byte_size_, target);
  }
  for (int i = 0; i < this->uint64_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->uint64_data(i), target);
  }

  // optional string doc_string = 12;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->doc_string(), target);
  }

  // repeated .onnx.StringStringEntryProto external_data = 13;
  for (int i = 0; i < this->external_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->external_data(i), target);
  }

  // optional .onnx.TensorProto.DataLocation data_location = 14;
  if (has_data_location()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->data_location(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TensorProto)
  return target;
}

int TensorProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 data_type = 2;
    if (has_data_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data_type());
    }

    // optional .onnx.TensorProto.Segment segment = 3;
    if (has_segment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->segment());
    }

    // optional string name = 8;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string doc_string = 12;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

    // optional bytes raw_data = 9;
    if (has_raw_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->raw_data());
    }

    // optional .onnx.TensorProto.DataLocation data_location = 14;
    if (has_data_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->data_location());
    }

  }
  // repeated int64 dims = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->dims_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->dims(i));
    }
    total_size += 1 * this->dims_size() + data_size;
  }

  // repeated float float_data = 4 [packed = true];
  {
    int data_size = 0;
    data_size = 4 * this->float_data_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _float_data_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 int32_data = 5 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->int32_data_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->int32_data(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _int32_data_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bytes string_data = 6;
  total_size += 1 * this->string_data_size();
  for (int i = 0; i < this->string_data_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->string_data(i));
  }

  // repeated int64 int64_data = 7 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->int64_data_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->int64_data(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _int64_data_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .onnx.StringStringEntryProto external_data = 13;
  total_size += 1 * this->external_data_size();
  for (int i = 0; i < this->external_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->external_data(i));
  }

  // repeated double double_data = 10 [packed = true];
  {
    int data_size = 0;
    data_size = 8 * this->double_data_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _double_data_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 uint64_data = 11 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->uint64_data_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->uint64_data(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _uint64_data_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TensorProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TensorProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TensorProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TensorProto::MergeFrom(const TensorProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  dims_.MergeFrom(from.dims_);
  float_data_.MergeFrom(from.float_data_);
  int32_data_.MergeFrom(from.int32_data_);
  string_data_.MergeFrom(from.string_data_);
  int64_data_.MergeFrom(from.int64_data_);
  external_data_.MergeFrom(from.external_data_);
  double_data_.MergeFrom(from.double_data_);
  uint64_data_.MergeFrom(from.uint64_data_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_data_type()) {
      set_data_type(from.data_type());
    }
    if (from.has_segment()) {
      mutable_segment()->::onnx::TensorProto_Segment::MergeFrom(from.segment());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_doc_string()) {
      set_doc_string(from.doc_string());
    }
    if (from.has_raw_data()) {
      set_raw_data(from.raw_data());
    }
    if (from.has_data_location()) {
      set_data_location(from.data_location());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TensorProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorProto::CopyFrom(const TensorProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorProto::IsInitialized() const {

  return true;
}

void TensorProto::Swap(TensorProto* other) {
  if (other != this) {
    dims_.Swap(&other->dims_);
    std::swap(data_type_, other->data_type_);
    std::swap(segment_, other->segment_);
    float_data_.Swap(&other->float_data_);
    int32_data_.Swap(&other->int32_data_);
    string_data_.Swap(&other->string_data_);
    int64_data_.Swap(&other->int64_data_);
    std::swap(name_, other->name_);
    std::swap(doc_string_, other->doc_string_);
    std::swap(raw_data_, other->raw_data_);
    external_data_.Swap(&other->external_data_);
    std::swap(data_location_, other->data_location_);
    double_data_.Swap(&other->double_data_);
    uint64_data_.Swap(&other->uint64_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TensorProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TensorProto_descriptor_;
  metadata.reflection = TensorProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TensorShapeProto_Dimension::kDimValueFieldNumber;
const int TensorShapeProto_Dimension::kDimParamFieldNumber;
const int TensorShapeProto_Dimension::kDenotationFieldNumber;
#endif  // !_MSC_VER

TensorShapeProto_Dimension::TensorShapeProto_Dimension()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.TensorShapeProto.Dimension)
}

void TensorShapeProto_Dimension::InitAsDefaultInstance() {
  TensorShapeProto_Dimension_default_oneof_instance_->dim_value_ = GOOGLE_LONGLONG(0);
  TensorShapeProto_Dimension_default_oneof_instance_->dim_param_ = &::google::protobuf::internal::GetEmptyStringAlreadyInited();
}

TensorShapeProto_Dimension::TensorShapeProto_Dimension(const TensorShapeProto_Dimension& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onnx.TensorShapeProto.Dimension)
}

void TensorShapeProto_Dimension::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  denotation_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_value();
}

TensorShapeProto_Dimension::~TensorShapeProto_Dimension() {
  // @@protoc_insertion_point(destructor:onnx.TensorShapeProto.Dimension)
  SharedDtor();
}

void TensorShapeProto_Dimension::SharedDtor() {
  if (denotation_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete denotation_;
  }
  if (has_value()) {
    clear_value();
  }
  if (this != default_instance_) {
  }
}

void TensorShapeProto_Dimension::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TensorShapeProto_Dimension::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TensorShapeProto_Dimension_descriptor_;
}

const TensorShapeProto_Dimension& TensorShapeProto_Dimension::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_onnx_2eproto();
  return *default_instance_;
}

TensorShapeProto_Dimension* TensorShapeProto_Dimension::default_instance_ = NULL;

TensorShapeProto_Dimension* TensorShapeProto_Dimension::New() const {
  return new TensorShapeProto_Dimension;
}

void TensorShapeProto_Dimension::clear_value() {
  switch(value_case()) {
    case kDimValue: {
      // No need to clear
      break;
    }
    case kDimParam: {
      delete value_.dim_param_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void TensorShapeProto_Dimension::Clear() {
  if (has_denotation()) {
    if (denotation_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      denotation_->clear();
    }
  }
  clear_value();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TensorShapeProto_Dimension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.TensorShapeProto.Dimension)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 dim_value = 1;
      case 1: {
        if (tag == 8) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.dim_value_)));
          set_has_dim_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dim_param;
        break;
      }

      // optional string dim_param = 2;
      case 2: {
        if (tag == 18) {
         parse_dim_param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dim_param()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dim_param().data(), this->dim_param().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dim_param");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_denotation;
        break;
      }

      // optional string denotation = 3;
      case 3: {
        if (tag == 26) {
         parse_denotation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_denotation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->denotation().data(), this->denotation().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "denotation");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.TensorShapeProto.Dimension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.TensorShapeProto.Dimension)
  return false;
#undef DO_
}

void TensorShapeProto_Dimension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.TensorShapeProto.Dimension)
  // optional int64 dim_value = 1;
  if (has_dim_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->dim_value(), output);
  }

  // optional string dim_param = 2;
  if (has_dim_param()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dim_param().data(), this->dim_param().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dim_param");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dim_param(), output);
  }

  // optional string denotation = 3;
  if (has_denotation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->denotation().data(), this->denotation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "denotation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->denotation(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.TensorShapeProto.Dimension)
}

::google::protobuf::uint8* TensorShapeProto_Dimension::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TensorShapeProto.Dimension)
  // optional int64 dim_value = 1;
  if (has_dim_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->dim_value(), target);
  }

  // optional string dim_param = 2;
  if (has_dim_param()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dim_param().data(), this->dim_param().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dim_param");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dim_param(), target);
  }

  // optional string denotation = 3;
  if (has_denotation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->denotation().data(), this->denotation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "denotation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->denotation(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TensorShapeProto.Dimension)
  return target;
}

int TensorShapeProto_Dimension::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional string denotation = 3;
    if (has_denotation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->denotation());
    }

  }
  switch (value_case()) {
    // optional int64 dim_value = 1;
    case kDimValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dim_value());
      break;
    }
    // optional string dim_param = 2;
    case kDimParam: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dim_param());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TensorShapeProto_Dimension::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TensorShapeProto_Dimension* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TensorShapeProto_Dimension*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TensorShapeProto_Dimension::MergeFrom(const TensorShapeProto_Dimension& from) {
  GOOGLE_CHECK_NE(&from, this);
  switch (from.value_case()) {
    case kDimValue: {
      set_dim_value(from.dim_value());
      break;
    }
    case kDimParam: {
      set_dim_param(from.dim_param());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_denotation()) {
      set_denotation(from.denotation());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TensorShapeProto_Dimension::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorShapeProto_Dimension::CopyFrom(const TensorShapeProto_Dimension& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorShapeProto_Dimension::IsInitialized() const {

  return true;
}

void TensorShapeProto_Dimension::Swap(TensorShapeProto_Dimension* other) {
  if (other != this) {
    std::swap(denotation_, other->denotation_);
    std::swap(value_, other->value_);
    std::swap(_oneof_case_[0], other->_oneof_case_[0]);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TensorShapeProto_Dimension::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TensorShapeProto_Dimension_descriptor_;
  metadata.reflection = TensorShapeProto_Dimension_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TensorShapeProto::kDimFieldNumber;
#endif  // !_MSC_VER

TensorShapeProto::TensorShapeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.TensorShapeProto)
}

void TensorShapeProto::InitAsDefaultInstance() {
}

TensorShapeProto::TensorShapeProto(const TensorShapeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onnx.TensorShapeProto)
}

void TensorShapeProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TensorShapeProto::~TensorShapeProto() {
  // @@protoc_insertion_point(destructor:onnx.TensorShapeProto)
  SharedDtor();
}

void TensorShapeProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TensorShapeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TensorShapeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TensorShapeProto_descriptor_;
}

const TensorShapeProto& TensorShapeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_onnx_2eproto();
  return *default_instance_;
}

TensorShapeProto* TensorShapeProto::default_instance_ = NULL;

TensorShapeProto* TensorShapeProto::New() const {
  return new TensorShapeProto;
}

void TensorShapeProto::Clear() {
  dim_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TensorShapeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.TensorShapeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .onnx.TensorShapeProto.Dimension dim = 1;
      case 1: {
        if (tag == 10) {
         parse_dim:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dim()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_dim;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.TensorShapeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.TensorShapeProto)
  return false;
#undef DO_
}

void TensorShapeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.TensorShapeProto)
  // repeated .onnx.TensorShapeProto.Dimension dim = 1;
  for (int i = 0; i < this->dim_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dim(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.TensorShapeProto)
}

::google::protobuf::uint8* TensorShapeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TensorShapeProto)
  // repeated .onnx.TensorShapeProto.Dimension dim = 1;
  for (int i = 0; i < this->dim_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->dim(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TensorShapeProto)
  return target;
}

int TensorShapeProto::ByteSize() const {
  int total_size = 0;

  // repeated .onnx.TensorShapeProto.Dimension dim = 1;
  total_size += 1 * this->dim_size();
  for (int i = 0; i < this->dim_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dim(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TensorShapeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TensorShapeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TensorShapeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TensorShapeProto::MergeFrom(const TensorShapeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  dim_.MergeFrom(from.dim_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TensorShapeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorShapeProto::CopyFrom(const TensorShapeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorShapeProto::IsInitialized() const {

  return true;
}

void TensorShapeProto::Swap(TensorShapeProto* other) {
  if (other != this) {
    dim_.Swap(&other->dim_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TensorShapeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TensorShapeProto_descriptor_;
  metadata.reflection = TensorShapeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TypeProto_Tensor::kElemTypeFieldNumber;
const int TypeProto_Tensor::kShapeFieldNumber;
#endif  // !_MSC_VER

TypeProto_Tensor::TypeProto_Tensor()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.TypeProto.Tensor)
}

void TypeProto_Tensor::InitAsDefaultInstance() {
  shape_ = const_cast< ::onnx::TensorShapeProto*>(&::onnx::TensorShapeProto::default_instance());
}

TypeProto_Tensor::TypeProto_Tensor(const TypeProto_Tensor& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onnx.TypeProto.Tensor)
}

void TypeProto_Tensor::SharedCtor() {
  _cached_size_ = 0;
  elem_type_ = 0;
  shape_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TypeProto_Tensor::~TypeProto_Tensor() {
  // @@protoc_insertion_point(destructor:onnx.TypeProto.Tensor)
  SharedDtor();
}

void TypeProto_Tensor::SharedDtor() {
  if (this != default_instance_) {
    delete shape_;
  }
}

void TypeProto_Tensor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypeProto_Tensor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TypeProto_Tensor_descriptor_;
}

const TypeProto_Tensor& TypeProto_Tensor::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_onnx_2eproto();
  return *default_instance_;
}

TypeProto_Tensor* TypeProto_Tensor::default_instance_ = NULL;

TypeProto_Tensor* TypeProto_Tensor::New() const {
  return new TypeProto_Tensor;
}

void TypeProto_Tensor::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    elem_type_ = 0;
    if (has_shape()) {
      if (shape_ != NULL) shape_->::onnx::TensorShapeProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TypeProto_Tensor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.TypeProto.Tensor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 elem_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &elem_type_)));
          set_has_elem_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_shape;
        break;
      }

      // optional .onnx.TensorShapeProto shape = 2;
      case 2: {
        if (tag == 18) {
         parse_shape:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.TypeProto.Tensor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.TypeProto.Tensor)
  return false;
#undef DO_
}

void TypeProto_Tensor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.TypeProto.Tensor)
  // optional int32 elem_type = 1;
  if (has_elem_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->elem_type(), output);
  }

  // optional .onnx.TensorShapeProto shape = 2;
  if (has_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->shape(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.TypeProto.Tensor)
}

::google::protobuf::uint8* TypeProto_Tensor::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TypeProto.Tensor)
  // optional int32 elem_type = 1;
  if (has_elem_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->elem_type(), target);
  }

  // optional .onnx.TensorShapeProto shape = 2;
  if (has_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->shape(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TypeProto.Tensor)
  return target;
}

int TypeProto_Tensor::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 elem_type = 1;
    if (has_elem_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->elem_type());
    }

    // optional .onnx.TensorShapeProto shape = 2;
    if (has_shape()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shape());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypeProto_Tensor::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TypeProto_Tensor* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TypeProto_Tensor*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TypeProto_Tensor::MergeFrom(const TypeProto_Tensor& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_elem_type()) {
      set_elem_type(from.elem_type());
    }
    if (from.has_shape()) {
      mutable_shape()->::onnx::TensorShapeProto::MergeFrom(from.shape());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TypeProto_Tensor::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeProto_Tensor::CopyFrom(const TypeProto_Tensor& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TypeProto_Tensor::IsInitialized() const {

  return true;
}

void TypeProto_Tensor::Swap(TypeProto_Tensor* other) {
  if (other != this) {
    std::swap(elem_type_, other->elem_type_);
    std::swap(shape_, other->shape_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TypeProto_Tensor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TypeProto_Tensor_descriptor_;
  metadata.reflection = TypeProto_Tensor_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TypeProto::kTensorTypeFieldNumber;
const int TypeProto::kDenotationFieldNumber;
#endif  // !_MSC_VER

TypeProto::TypeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.TypeProto)
}

void TypeProto::InitAsDefaultInstance() {
  TypeProto_default_oneof_instance_->tensor_type_ = const_cast< ::onnx::TypeProto_Tensor*>(&::onnx::TypeProto_Tensor::default_instance());
}

TypeProto::TypeProto(const TypeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onnx.TypeProto)
}

void TypeProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  denotation_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_value();
}

TypeProto::~TypeProto() {
  // @@protoc_insertion_point(destructor:onnx.TypeProto)
  SharedDtor();
}

void TypeProto::SharedDtor() {
  if (denotation_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete denotation_;
  }
  if (has_value()) {
    clear_value();
  }
  if (this != default_instance_) {
  }
}

void TypeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TypeProto_descriptor_;
}

const TypeProto& TypeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_onnx_2eproto();
  return *default_instance_;
}

TypeProto* TypeProto::default_instance_ = NULL;

TypeProto* TypeProto::New() const {
  return new TypeProto;
}

void TypeProto::clear_value() {
  switch(value_case()) {
    case kTensorType: {
      delete value_.tensor_type_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void TypeProto::Clear() {
  if (has_denotation()) {
    if (denotation_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      denotation_->clear();
    }
  }
  clear_value();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TypeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.TypeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .onnx.TypeProto.Tensor tensor_type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tensor_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_denotation;
        break;
      }

      // optional string denotation = 6;
      case 6: {
        if (tag == 50) {
         parse_denotation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_denotation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->denotation().data(), this->denotation().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "denotation");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.TypeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.TypeProto)
  return false;
#undef DO_
}

void TypeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.TypeProto)
  // optional .onnx.TypeProto.Tensor tensor_type = 1;
  if (has_tensor_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tensor_type(), output);
  }

  // optional string denotation = 6;
  if (has_denotation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->denotation().data(), this->denotation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "denotation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->denotation(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.TypeProto)
}

::google::protobuf::uint8* TypeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TypeProto)
  // optional .onnx.TypeProto.Tensor tensor_type = 1;
  if (has_tensor_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tensor_type(), target);
  }

  // optional string denotation = 6;
  if (has_denotation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->denotation().data(), this->denotation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "denotation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->denotation(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TypeProto)
  return target;
}

int TypeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string denotation = 6;
    if (has_denotation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->denotation());
    }

  }
  switch (value_case()) {
    // optional .onnx.TypeProto.Tensor tensor_type = 1;
    case kTensorType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tensor_type());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TypeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TypeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TypeProto::MergeFrom(const TypeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  switch (from.value_case()) {
    case kTensorType: {
      mutable_tensor_type()->::onnx::TypeProto_Tensor::MergeFrom(from.tensor_type());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_denotation()) {
      set_denotation(from.denotation());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TypeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeProto::CopyFrom(const TypeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TypeProto::IsInitialized() const {

  return true;
}

void TypeProto::Swap(TypeProto* other) {
  if (other != this) {
    std::swap(denotation_, other->denotation_);
    std::swap(value_, other->value_);
    std::swap(_oneof_case_[0], other->_oneof_case_[0]);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TypeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TypeProto_descriptor_;
  metadata.reflection = TypeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OperatorSetIdProto::kDomainFieldNumber;
const int OperatorSetIdProto::kVersionFieldNumber;
#endif  // !_MSC_VER

OperatorSetIdProto::OperatorSetIdProto()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.OperatorSetIdProto)
}

void OperatorSetIdProto::InitAsDefaultInstance() {
}

OperatorSetIdProto::OperatorSetIdProto(const OperatorSetIdProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onnx.OperatorSetIdProto)
}

void OperatorSetIdProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  domain_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OperatorSetIdProto::~OperatorSetIdProto() {
  // @@protoc_insertion_point(destructor:onnx.OperatorSetIdProto)
  SharedDtor();
}

void OperatorSetIdProto::SharedDtor() {
  if (domain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete domain_;
  }
  if (this != default_instance_) {
  }
}

void OperatorSetIdProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperatorSetIdProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OperatorSetIdProto_descriptor_;
}

const OperatorSetIdProto& OperatorSetIdProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_onnx_2eproto();
  return *default_instance_;
}

OperatorSetIdProto* OperatorSetIdProto::default_instance_ = NULL;

OperatorSetIdProto* OperatorSetIdProto::New() const {
  return new OperatorSetIdProto;
}

void OperatorSetIdProto::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_domain()) {
      if (domain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        domain_->clear();
      }
    }
    version_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OperatorSetIdProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.OperatorSetIdProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string domain = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->domain().data(), this->domain().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "domain");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_version;
        break;
      }

      // optional int64 version = 2;
      case 2: {
        if (tag == 16) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.OperatorSetIdProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.OperatorSetIdProto)
  return false;
#undef DO_
}

void OperatorSetIdProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.OperatorSetIdProto)
  // optional string domain = 1;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->domain(), output);
  }

  // optional int64 version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->version(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.OperatorSetIdProto)
}

::google::protobuf::uint8* OperatorSetIdProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onnx.OperatorSetIdProto)
  // optional string domain = 1;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->domain(), target);
  }

  // optional int64 version = 2;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->version(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.OperatorSetIdProto)
  return target;
}

int OperatorSetIdProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string domain = 1;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->domain());
    }

    // optional int64 version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->version());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperatorSetIdProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OperatorSetIdProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OperatorSetIdProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OperatorSetIdProto::MergeFrom(const OperatorSetIdProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_domain()) {
      set_domain(from.domain());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OperatorSetIdProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperatorSetIdProto::CopyFrom(const OperatorSetIdProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperatorSetIdProto::IsInitialized() const {

  return true;
}

void OperatorSetIdProto::Swap(OperatorSetIdProto* other) {
  if (other != this) {
    std::swap(domain_, other->domain_);
    std::swap(version_, other->version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OperatorSetIdProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OperatorSetIdProto_descriptor_;
  metadata.reflection = OperatorSetIdProto_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace onnx

// @@protoc_insertion_point(global_scope)
